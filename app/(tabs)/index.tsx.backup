import { matches, profiles, UserProfile } from '@/constants/dating';
import { Color        {/* Header with Yoove Logo */}
        <View style={styles.header}>
          <View style={styles.logoContainer}>
            <View style={styles.logo}>
              <Text style={styles.logoText}>yoo</Text>
              <Text style={styles.logoHeart}>üíï</Text>
              <Text style={styles.logoText}>e</Text>
            </View>
            <Text style={[styles.tagline, { color: Colors[colorScheme].icon }]}>
              you and me.
            </Text>
          </View>
          <TouchableOpacity style={styles.notificationButton}>
            <Text style={styles.notificationIcon}>üíå</Text>
          </TouchableOpacity>
        </View>nstants/theme';
import { useColorScheme } from '@/hooks/use-color-scheme';
import { router } from 'expo-router';
import React, { useState } from 'react';
import {
  Alert,
  Dimensions,
  Image,
  SafeAreaView,
  ScrollView,
  StyleSheet,
  Text,
  TouchableOpacity,
  View
} from 'react-native';

const { width, height } = Dimensions.get('window');

interface ProfileCardProps {
  profile: UserProfile;
  colorScheme: 'light' | 'dark';
  onLike: () => void;
  onPass: () => void;
}

const ProfileCard = ({ profile, colorScheme, onLike, onPass }: ProfileCardProps) => (
  <View style={[styles.profileCard, { backgroundColor: Colors[colorScheme].card }]}>
    <Image source={profile.photos[0]} style={styles.profileImage} />
    <View style={styles.profileOverlay}>
      <View style={styles.profileInfo}>
        <Text style={styles.profileName}>{profile.name}, {profile.age}</Text>
        <Text style={styles.profileLocation}>üìç {profile.location}</Text>
        <Text style={styles.profileBio} numberOfLines={2}>{profile.bio}</Text>
      </View>
      <View style={styles.profileActions}>
        <TouchableOpacity style={styles.passButton} onPress={onPass}>
          <Text style={[styles.profileActionIcon, { color: '#666' }]}>‚úï</Text>
        </TouchableOpacity>
        <TouchableOpacity style={styles.likeButton} onPress={onLike}>
          <Text style={[styles.profileActionIcon, { color: 'white' }]}>‚ô•</Text>
        </TouchableOpacity>
      </View>
    </View>
  </View>
);

export default function HomeScreen() {
  const colorScheme = useColorScheme() ?? 'light';
  const [currentProfileIndex, setCurrentProfileIndex] = useState(0);
  const [availableProfiles, setAvailableProfiles] = useState(profiles.filter(p => p.id !== "1")); // Exclure le profil actuel

  const handleLike = () => {
    const likedProfile = availableProfiles[currentProfileIndex];
    Alert.alert(
      'üíï C\'est un match !',
      `Vous et ${likedProfile.name} vous plaisez mutuellement !`,
      [{ text: 'Super !', style: 'default' }]
    );
    nextProfile();
  };

  const handlePass = () => {
    nextProfile();
  };

  const nextProfile = () => {
    if (currentProfileIndex < availableProfiles.length - 1) {
      setCurrentProfileIndex(currentProfileIndex + 1);
    } else {
      Alert.alert(
        'Plus de profils',
        'Vous avez vu tous les profils disponibles pour le moment !',
        [{ text: 'OK', style: 'default' }]
      );
    }
  };

  const currentProfile = availableProfiles[currentProfileIndex];

  return (
    <SafeAreaView style={[styles.container, { backgroundColor: Colors[colorScheme].background }]}>
      <ScrollView showsVerticalScrollIndicator={false}>
        {/* Header */}
        <View style={styles.header}>
          <View>
            <Text style={[styles.greeting, { color: Colors[colorScheme].icon }]}>
              D√©couvrir
            </Text>
            <Text style={[styles.username, { color: Colors[colorScheme].text }]}>
              Nouvelles rencontres ÔøΩ
            </Text>
          </View>
          <TouchableOpacity style={styles.notificationButton}>
            <Text style={styles.notificationIcon}>ÔøΩ</Text>
          </TouchableOpacity>
        </View>

        {/* Main Profile Card */}
        {currentProfile && (
          <View style={styles.mainProfileContainer}>
            <ProfileCard 
              profile={currentProfile}
              colorScheme={colorScheme}
              onLike={handleLike}
              onPass={handlePass}
            />
          </View>
        )}

        {/* Match Statistics */}
        <View style={styles.section}>
          <Text style={[styles.sectionTitle, { color: Colors[colorScheme].text }]}>
            Vos statistiques
          </Text>
          <View style={styles.statsContainer}>
            <View style={[styles.statCard, { backgroundColor: Colors[colorScheme].card }]}>
              <Text style={[styles.statNumber, { color: Colors[colorScheme].primary }]}>
                {matches.length}
              </Text>
              <Text style={[styles.statLabel, { color: Colors[colorScheme].text }]}>
                Matchs
              </Text>
            </View>
            <View style={[styles.statCard, { backgroundColor: Colors[colorScheme].card }]}>
              <Text style={[styles.statNumber, { color: Colors[colorScheme].primary }]}>
                {profiles.length - currentProfileIndex - 1}
              </Text>
              <Text style={[styles.statLabel, { color: Colors[colorScheme].text }]}>
                Nouveaux profils
              </Text>
            </View>
            <View style={[styles.statCard, { backgroundColor: Colors[colorScheme].card }]}>
              <Text style={[styles.statNumber, { color: Colors[colorScheme].primary }]}>
                85%
              </Text>
              <Text style={[styles.statLabel, { color: Colors[colorScheme].text }]}>
                Compatibilit√©
              </Text>
            </View>
          </View>
        </View>

        {/* Recent Matches */}
        <View style={styles.section}>
          <View style={styles.sectionHeader}>
            <Text style={[styles.sectionTitle, { color: Colors[colorScheme].text }]}>
              Matchs r√©cents
            </Text>
            <TouchableOpacity onPress={() => router.push('/explore')}>
              <Text style={[styles.seeAll, { color: Colors[colorScheme].primary }]}>
                Voir tout
              </Text>
            </TouchableOpacity>
          </View>
          <ScrollView horizontal showsHorizontalScrollIndicator={false}>
            {matches.map((match) => {
              const matchedProfile = profiles.find(p => p.id === match.userId);
              return matchedProfile ? (
                <TouchableOpacity 
                  key={match.id}
                  style={styles.matchCard}
                  onPress={() => router.push('/explore')}
                >
                  <Image source={matchedProfile.photos[0]} style={styles.matchImage} />
                  <Text style={[styles.matchName, { color: Colors[colorScheme].text }]}>
                    {matchedProfile.name.split(' ')[0]}
                  </Text>
                </TouchableOpacity>
              ) : null;
            })}
          </ScrollView>
        </View>

        {/* Quick Actions */}
        <View style={styles.section}>
          <Text style={[styles.sectionTitle, { color: Colors[colorScheme].text }]}>
            Actions rapides
          </Text>
          <View style={styles.quickActions}>
            <TouchableOpacity 
              style={[styles.actionButton, { backgroundColor: Colors[colorScheme].card }]}
              onPress={() => router.push('/explore')}
            >
              <Text style={styles.actionIcon}>ÔøΩ</Text>
              <Text style={[styles.actionText, { color: Colors[colorScheme].text }]}>
                Messages
              </Text>
            </TouchableOpacity>
            <TouchableOpacity 
              style={[styles.actionButton, { backgroundColor: Colors[colorScheme].card }]}
              onPress={() => router.push('/profile')}
            >
              <Text style={styles.actionIcon}>‚öôÔ∏è</Text>
              <Text style={[styles.actionText, { color: Colors[colorScheme].text }]}>
                Profil
              </Text>
            </TouchableOpacity>
            <TouchableOpacity 
              style={[styles.actionButton, { backgroundColor: Colors[colorScheme].card }]}
            >
              <Text style={styles.actionIcon}>üéØ</Text>
              <Text style={[styles.actionText, { color: Colors[colorScheme].text }]}>
                Boost
              </Text>
            </TouchableOpacity>
          </View>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingHorizontal: 20,
    paddingTop: 10,
    paddingBottom: 20,
  },
  greeting: {
    fontSize: 16,
  },
  username: {
    fontSize: 24,
    fontWeight: 'bold',
  },
  notificationButton: {
    width: 44,
    height: 44,
    borderRadius: 22,
    backgroundColor: 'rgba(255, 71, 87, 0.1)',
    alignItems: 'center',
    justifyContent: 'center',
  },
  notificationIcon: {
    fontSize: 20,
  },
  section: {
    marginBottom: 24,
  },
  sectionHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingHorizontal: 20,
    marginBottom: 16,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: 'bold',
  },
  seeAll: {
    fontSize: 14,
    fontWeight: '600',
  },
  mainProfileContainer: {
    paddingHorizontal: 20,
    marginBottom: 24,
  },
  profileCard: {
    borderRadius: 20,
    overflow: 'hidden',
    height: height * 0.6,
    position: 'relative',
  },
  profileImage: {
    width: '100%',
    height: '100%',
    position: 'absolute',
  },
  profileOverlay: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    backgroundColor: 'rgba(0,0,0,0.7)',
    padding: 20,
  },
  profileInfo: {
    marginBottom: 16,
  },
  profileName: {
    color: 'white',
    fontSize: 28,
    fontWeight: 'bold',
    marginBottom: 4,
  },
  profileLocation: {
    color: 'white',
    fontSize: 16,
    opacity: 0.9,
    marginBottom: 8,
  },
  profileBio: {
    color: 'white',
    fontSize: 16,
    opacity: 0.8,
  },
  profileActions: {
    flexDirection: 'row',
    justifyContent: 'center',
    gap: 20,
  },
  passButton: {
    width: 56,
    height: 56,
    borderRadius: 28,
    backgroundColor: 'rgba(255, 255, 255, 0.9)',
    alignItems: 'center',
    justifyContent: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
    elevation: 5,
  },
  likeButton: {
    width: 64,
    height: 64,
    borderRadius: 32,
    backgroundColor: '#FF4757',
    alignItems: 'center',
    justifyContent: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
    elevation: 5,
  },
  profileActionIcon: {
    fontSize: 24,
    fontWeight: 'bold',
  },
  statsContainer: {
    flexDirection: 'row',
    paddingHorizontal: 20,
    gap: 12,
  },
  statCard: {
    flex: 1,
    alignItems: 'center',
    padding: 16,
    borderRadius: 16,
  },
  statNumber: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 4,
  },
  statLabel: {
    fontSize: 14,
    opacity: 0.7,
  },
  matchCard: {
    alignItems: 'center',
    marginLeft: 20,
    width: 80,
  },
  matchImage: {
    width: 60,
    height: 60,
    borderRadius: 30,
    marginBottom: 8,
  },
  matchName: {
    fontSize: 12,
    fontWeight: '600',
    textAlign: 'center',
  },
  quickActions: {
    flexDirection: 'row',
    paddingHorizontal: 20,
    gap: 12,
  },
  actionButton: {
    flex: 1,
    alignItems: 'center',
    padding: 16,
    borderRadius: 16,
  },
  actionIcon: {
    fontSize: 24,
    marginBottom: 8,
  },
  actionText: {
    fontSize: 14,
    fontWeight: '600',
  },
});
